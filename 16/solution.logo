FD 10
PRINT "foo"
CLOSEALL
MAKE "file "advent-of-code-2023/16/input16.txt
OPENREAD :file
SETREAD :file
MAKE "STARTUP [
	SETREAD :file
	MAKE "lines []
	DO.WHILE [
		(MAKE "line READRAWLINE)
		(PRINT :line)
		PUSH "lines :line
	] [not equal? :line []]
	PRINT POP "lines
	MAKE "lines REVERSE :lines
	PRINT :lines
	MAKE "seen MDARRAY (SE COUNT :lines COUNT ITEM 1 :lines)
	MAKE "dir [0 1]
	MAKE "queue [[[1 1] [1 0]]]
	DO.WHILE [
		MAKE "item DEQUEUE "queue
		MAKE "pos ITEM 1 :item
		MAKE "x ITEM 1 :pos
		MAKE "y ITEM 2 :pos
		MAKE "dir ITEM 2 :item
		MAKE "xd ITEM 1 :dir
		MAKE "yd ITEM 2 :dir
		MAKE "dbit LSHIFT 1 (:xd + 1) + (:yd + 1) * 3
		MAKE "splitter IFELSE [EQUAL? :xd 0] ["-] ["\|]
		MAKE "looping EQUAL? 0 0
		PRINT (SE "startloop :x :y :xd :yd)
		WHILE [IFELSE [(AND
				:looping
				GREATER? :x 0
				GREATER? :y 0
				LESSEQUAL? :x COUNT ITEM 1 :lines
				LESSEQUAL? :y COUNT :lines
			)]
			[PRINT (SE "test\ seen MDITEM (SE :y :x) :seen "dbit :dbit) EQUAL? 0 BITAND :dbit MDITEM (SE :y :x) :seen] [EQUAL? 0 1]
		] [
			MDSETITEM (SE :y :x) :seen BITOR :dbit MDITEM (SE :y :x) :seen
			MAKE "char MDITEM SE :y :x :lines
			(PRINT "INLOOP :x :y :char :splitter MDITEM (SE :y :x) :seen)
			IF EQUAL? :char :splitter [
				QUEUE "queue LIST LIST :x - :yd :y - :xd LIST 0 - :yd 0 - :xd
				QUEUE "queue LIST LIST :x + :yd :y + :xd LIST :yd :xd
				MAKE "looping EQUAL? 1 0
			]
			IF EQUAL? :char "\\ [
				QUEUE "queue LIST LIST :x + :yd :y + :xd LIST :yd :xd
				MAKE "looping EQUAL? 1 0
			]
			IF EQUAL? :char "/ [
				QUEUE "queue LIST LIST :x - :yd :y - :xd LIST 0 - :yd 0 - :xd
				MAKE "looping EQUAL? 1 0
			]
			IF :looping [
				MAKE "x :x + :xd
				MAKE "y :y + :yd
				(PRINT "next :x :y)
			]
		]
		PRINT (LIST "queue\ after\ loop :queue)
	] [NOT EQUAL? COUNT :queue 0]
	PRINT REDUCE "+ MAP [COUNT FILTER [NOTEQUAL? ? []] ARRAYTOLIST ?] ARRAYTOLIST :seen
]
